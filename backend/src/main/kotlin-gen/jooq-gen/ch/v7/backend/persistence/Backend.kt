/*
 * This file is generated by jOOQ.
 */
package ch.v7.backend.persistence


import ch.v7.backend.persistence.tables.RessortTable
import ch.v7.backend.persistence.tables.UserRessortTable
import ch.v7.backend.persistence.tables.UserTable

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Backend : SchemaImpl("backend", DefaultCatalog.DEFAULT_CATALOG) {
    public companion object {

        /**
         * The reference instance of <code>backend</code>
         */
        val BACKEND: Backend = Backend()
    }

    /**
     * The table <code>backend.t_ressort</code>.
     */
    val RESSORT: RessortTable get() = RessortTable.RESSORT

    /**
     * The table <code>backend.t_user</code>.
     */
    val USER: UserTable get() = UserTable.USER

    /**
     * The table <code>backend.t_user_ressort</code>.
     */
    val USER_RESSORT: UserRessortTable get() = UserRessortTable.USER_RESSORT

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        RessortTable.RESSORT,
        UserTable.USER,
        UserRessortTable.USER_RESSORT
    )
}
